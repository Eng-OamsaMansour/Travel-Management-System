public class ctrip extends javax.swing.JFrame {

    /**
     * Creates new form ctrip
     */
    public ctrip() {
        initComponents();
         filltabel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        tripid = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Confirm Trip");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(10, 10, 160, 30);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Trip ID", "DATE", "PRICE", "TRIP Loation", "Trip Hotel", "Transportaion way", "Trip path Description", "Max Booking num", "Trip Kind", "Current Booking"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 50, 750, 90);

        jLabel3.setText("Trip ID:");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(20, 200, 60, 40);

        tripid.setText("ID");
        jPanel1.add(tripid);
        tripid.setBounds(90, 210, 120, 22);

        jButton1.setText("confirm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(230, 210, 75, 25);

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Zahi\\Music\\6.png")); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, -20, 774, 560);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 770, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        
public void filltabel()
{  
ArrayList<String> ids= new ArrayList<String>();
    
		try{
			OracleDataSource o = new OracleDataSource();
			o.setURL("jdbc:oracle:thin:@localhost:1521:xe");
			o.setUser("c##TMS");
			o.setPassword("123456");
			Connection c = o.getConnection();
			Statement s = c.createStatement();
			ResultSet rs = s.executeQuery("SELECT * FROM TRIP WHERE STATES = ' "unconfirmed" ' ");
			while(rs.next()) {  
			ids.add( rs.getString(1));
			}
			c.close();
		}
		catch (Exception e){
			System.out.println( e.toString());
		}
                
                ArrayList<String> date= new ArrayList<String>();
    
		try{
			OracleDataSource o = new OracleDataSource();
			o.setURL("jdbc:oracle:thin:@localhost:1521:xe");
			o.setUser("c##TMS");
			o.setPassword("123456");
			Connection c = o.getConnection();
			Statement s = c.createStatement();
			ResultSet rs = s.executeQuery("SELECT * FROM TRIP WHERE STATES = ' "unconfirmed" ' ");
			while(rs.next()) {  
			date.add( rs.getString(2));
			}
			c.close();
		}
		catch (Exception e){
			System.out.println( e.toString());
		}
                ArrayList<String> price= new ArrayList<String>();
    
		try{
			OracleDataSource o = new OracleDataSource();
			o.setURL("jdbc:oracle:thin:@localhost:1521:xe");
			o.setUser("c##TMS");
			o.setPassword("123456");
			Connection c = o.getConnection();
			Statement s = c.createStatement();
			ResultSet rs = s.executeQuery("SELECT * FROM TRIP WHERE STATES = ' "unconfirmed" ' ");
			while(rs.next()) {  
			price.add( rs.getString(3));
			}
			c.close();
		}
		catch (Exception e){
			System.out.println( e.toString());
		}
                
                ArrayList<String> trip_location= new ArrayList<String>();
    
		try{
			OracleDataSource o = new OracleDataSource();
			o.setURL("jdbc:oracle:thin:@localhost:1521:xe");
			o.setUser("c##TMS");
			o.setPassword("123456");
			Connection c = o.getConnection();
			Statement s = c.createStatement();
			ResultSet rs = s.executeQuery("SELECT * FROM TRIP WHERE STATES = ' "unconfirmed" ' ");
			while(rs.next()) {  
			trip_location.add( rs.getString(4));
			}
			c.close();
		}
		catch (Exception e){
			System.out.println( e.toString());
		}
                
                
                ArrayList<String> trip_hotel= new ArrayList<String>();
    
		try{
			OracleDataSource o = new OracleDataSource();
			o.setURL("jdbc:oracle:thin:@localhost:1521:xe");
			o.setUser("c##TMS");
			o.setPassword("123456");
			Connection c = o.getConnection();
			Statement s = c.createStatement();
			ResultSet rs = s.executeQuery("SELECT * FROM TRIP WHERE STATES = ' "unconfirmed" ' ");
			while(rs.next()) {  
			trip_hotel.add( rs.getString(5));
			}
			c.close();
		}
		catch (Exception e){
			System.out.println( e.toString());
		}
                
                
                ArrayList<String> tran_way= new ArrayList<String>();
    
		try{
			OracleDataSource o = new OracleDataSource();
			o.setURL("jdbc:oracle:thin:@localhost:1521:xe");
			o.setUser("c##TMS");
			o.setPassword("123456");
			Connection c = o.getConnection();
			Statement s = c.createStatement();
			ResultSet rs = s.executeQuery("SELECT * FROM TRIP WHERE STATES = ' "unconfirmed" ' ");
			while(rs.next()) {  
			tran_way.add( rs.getString(6));
			}
			c.close();
		}
		catch (Exception e){
			System.out.println( e.toString());
		}
                
                
                ArrayList<String> trip_path= new ArrayList<String>();
    
		try{
			OracleDataSource o = new OracleDataSource();
			o.setURL("jdbc:oracle:thin:@localhost:1521:xe");
			o.setUser("c##TMS");
			o.setPassword("123456");
			Connection c = o.getConnection();
			Statement s = c.createStatement();
			ResultSet rs = s.executeQuery("SELECT * FROM TRIP WHERE STATES = ' "unconfirmed" ' ");
			while(rs.next()) {  
			trip_path.add( rs.getString());
			}
			c.close();
		}
		catch (Exception e){
			System.out.println( e.toString());
		}
                
                
                ArrayList<String> trip_kind= new ArrayList<String>();
    
		try{
			OracleDataSource o = new OracleDataSource();
			o.setURL("jdbc:oracle:thin:@localhost:1521:xe");
			o.setUser("c##TMS");
			o.setPassword("123456");
			Connection c = o.getConnection();
			Statement s = c.createStatement();
			ResultSet rs = s.executeQuery("SELECT * FROM TRIP WHERE STATES = ' "unconfirmed" ' ");
			while(rs.next()) {  
			trip_kind.add( rs.getString(8));
			}
			c.close();
		}
		catch (Exception e){
			System.out.println( e.toString());
		}
                
                
                ArrayList<String> max_booking= new ArrayList<String>();
    
		try{
			OracleDataSource o = new OracleDataSource();
			o.setURL("jdbc:oracle:thin:@localhost:1521:xe");
			o.setUser("c##TMS");
			o.setPassword("123456");
			Connection c = o.getConnection();
			Statement s = c.createStatement();
			ResultSet rs = s.executeQuery("SELECT * FROM TRIP WHERE STATES = ' "unconfirmed" ' ");
			while(rs.next()) {  
			max_booking.add( rs.getString(9));
			}
			c.close();
		}
		catch (Exception e){
			System.out.println( e.toString());
		}
                
                
                ArrayList<String> cur_booking= new ArrayList<String>();
    
		try{
			OracleDataSource o = new OracleDataSource();
			o.setURL("jdbc:oracle:thin:@localhost:1521:xe");
			o.setUser("c##TMS");
			o.setPassword("123456");
			Connection c = o.getConnection();
			Statement s = c.createStatement();
			ResultSet rs = s.executeQuery("SELECT * FROM TRIP WHERE STATES = ' "unconfirmed" ' ");
			while(rs.next()) {  
			cur_booking.add( rs.getString(10));
			}
			c.close();
		}
		catch (Exception e){
			System.out.println( e.toString());
		}
               
    DefaultTableModel model = jTable1.getModel();
    Object rowdata=new Object[10];
    for(int j=0; j<ids.size(); j++)
    {
    for(int i=0; i<10; i++)
    {
    rowdata[j]=ids.get(i);
    rowdata[j]=date.get(i);
    rowdata[j]=price.get(i);
    rowdata[j]=trip_location.get(i);
    rowdata[j]=trip_hotel.get(i);
    rowdata[j]=tran_way.get(i);
    rowdata[j]= trip_path.get(i);
    rowdata[j]=max_booking.get(i);
    rowdata[j]=trip_kind.get(i);
    rowdata[j]=cur_booking.get(i);
                
   
    }
    }

}
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ctrip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ctrip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ctrip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ctrip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ctrip().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField tripid;
    // End of variables declaration                   
}
